name: Elixir CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: write
  pull-requests: write
  issues: write
  repository-projects: write

jobs:
  build:

    name: Build and test
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Elixir
      uses: erlef/setup-beam@v1
      with:
        elixir-version: '1.14.3' # Define the elixir version [required]
        otp-version: '25.2' # Define the OTP version [required]
    - name: Restore dependencies cache
      uses: actions/cache@v3
      with:
        path: deps
        key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
        restore-keys: ${{ runner.os }}-mix-
    - name: Install dependencies
      run: mix deps.get
    - name: Run tests
      run: mix test

  release:
    if: github.ref == 'refs/heads/master'
    needs: [build]
    name: Publish to Hex
    runs-on: ubuntu-latest
    env:
      HEX_API_KEY: ${{ secrets.HEX_API_KEY }}

    steps:
    - uses: actions/checkout@v3
    - name: Set up Elixir
      uses: erlef/setup-beam@v1
      with:
        elixir-version: '1.14.3'
        otp-version: '25.2'
    - name: Configure bot
      run: |
        git config user.name github-actions[bot]
        git config user.email github-actions[bot]@users.noreply.github.com
    - name: Restore dependencies cache
      id: cache-deps
      uses: actions/cache@v3
      with:
        path: deps
        key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
        restore-keys: ${{ runner.os }}-mix-
    - if: ${{ steps.cache-deps.outputs.cache-hit != 'true' }}
      name: Install dependencies        
      continue-on-error: true
      run: mix deps.get
    - name: Release and publish
      run: mix version.next
